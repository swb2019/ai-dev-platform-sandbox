name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  security-scans:
    name: CI / Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz gitleaks
          sudo mv gitleaks /usr/local/bin/gitleaks
          rm gitleaks.tar.gz

      - name: Run gitleaks detect
        run: gitleaks detect --config=.gitleaks.toml --no-banner --redact

      - name: Install Semgrep
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --no-cache-dir semgrep

      - name: Run Semgrep CI scan
        run: semgrep ci --config semgrep.yml

  quality-gates:
    name: CI / Quality Gates
    runs-on: ubuntu-latest
    needs: security-scans
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm type-check

      - name: Format check
        run: pnpm format:check

      - name: Build
        run: pnpm build

  supply_chain:
    name: CI / Supply Chain
    runs-on: ubuntu-latest
    needs: quality-gates
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_REPO: ghcr.io/${{ github.repository }}/web
      IMAGE_TAG: ${{ github.sha }}
      SBOM_OUTPUT: artifacts/sbom/web-${{ github.sha }}-cyclonedx.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install supply chain tooling
        run: |
          set -euo pipefail
          TRIVY_VERSION=0.55.2
          GRYPE_VERSION=0.79.3
          SYFT_VERSION=1.33.0
          COSIGN_VERSION=2.3.0
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends curl jq
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v${TRIVY_VERSION}
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b /usr/local/bin v${GRYPE_VERSION}
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sudo sh -s -- -b /usr/local/bin v${SYFT_VERSION}
          curl -sSL https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-amd64 -o cosign
          sudo install -m 0755 cosign /usr/local/bin/cosign
          rm cosign

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        run: pnpm docker:build:web

      - name: Scan container image
        run: pnpm docker:scan:web

      - name: Generate SBOM
        run: pnpm docker:sbom:web

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-sbom-${{ github.sha }}
          path: ${{ env.SBOM_OUTPUT }}
          if-no-files-found: error

      - name: Push image to GHCR
        run: docker push "${IMAGE_REPO}:${IMAGE_TAG}"

      - name: Sign image and SBOM
        run: pnpm docker:sign:web
